node {
	String bastionIP = "169.56.113.37"
	def bastionHome="/root"
	def imageRepository="test"
	
    /*
	stage("Get source") {
        git url: "https://github.com/happykbfg/config.git", branch: "main", credentialsId: "credential_github_kb05"	
    }
    

    
   	stage("Get scripts") {
       script {
            sh "cd ${env.WORKSPACE}"
            sh "rm -rf ${env.WORKSPACE}/run-cicd 2>/dev/null"
            sh "git clone https://github.com/happykbfg/run-cicd.git"
        }        	
    }
    */
    
    stage("Test") {
        //withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'credential_bastion', \
        //                                                     keyFileVariable: 'SSH_KEY_FOR_BASTION')]) {
        withCredentials(
            [
                file
                    (credentialsId: "keyfile_bastion", 
                        variable: "privatekey_bastion")
            ]
        ) {                         
        //sshagent(credentials:['credential_bastion']) {
            echo "***** Private key => ${privatekey_bastion}"    
            sh "ssh ${privatekey_bastion} -o StrictHostKeyChecking=no root@"+bastionIP+" mkdir -p ${bastionHome}/cicd/${imageRepository}"           
           // sh "ssh root@"+bastionIP+" mkdir -p ${bastionHome}/cicd/${imageRepository}"
           // sh "ssh root@"+bastionIP+" rm -rf ${bastionHome}/run-cicd 2>/dev/null"
           // sh "scp -r ${env.WORKSPACE}/run-cicd root@"+bastionIP+":${bastionHome}/"
           // sh "scp -r ${env.WORKSPACE}/cicd root@"+bastionIP+":${bastionHome}/cicd/${imageRepository}/"
        }
    }
}
